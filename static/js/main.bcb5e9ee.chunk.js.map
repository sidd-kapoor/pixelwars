{"version":3,"sources":["components/logo1.png","components/ColorSelector.js","components/UserList.js","components/WhiteBoard.js","components/Choose.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ColorSelector","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleFullScreen","window","innerWidth","screenTop","screenY","test","navigator","userAgent","doc","document","docEl","documentElement","requestFullScreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","cancelFullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","toggler","setState","prevState","toggle","state","_this2","react_default","a","createElement","className","onClick","react_color_lib","onChange","selectColor","color","currentColor","clearBoard","leave","leaveRoom","Component","UserList","userList","map","user","key","id","style","username","socket","socketIOClient","WhiteBoard","drawLine","x0","y0","x1","y1","emit","force","context","whiteboard","getContext","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","closePath","w","h","innerHeight","isNaN","room","cleared","onMouseDown","e","currentX","clientX","currentY","clientY","drawing","onMouseUp","onMouseMove","onTouchMove","console","log","touches","onResize","windowWidth","windowHeight","throttle","callback","delay","previousCall","Date","getTime","time","apply","arguments","hex","React","createRef","on","joined","users","clearRect","data","current","height","width","addEventListener","concat","ref","UserList_UserList","ColorSelector_ColorSelector","clearRoom","Choose","src","logo","onKeyPress","setUsername","name","placeholder","value","typing","changeHandler","target","length","messageName","typingRoom","messageRoom","App","inputName","defineProperty","toUpperCase","deferredPrompt","preventDefault","prompt","userChoice","then","choiceResult","outcome","WhiteBoard_WhiteBoard","assign","Choose_Choose","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bcb5e9ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.b746ff34.png\";","import React, { Component } from \"react\";\nimport { CirclePicker } from \"react-color\";\n\nexport default class ColorSelector extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttoggle: false\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t//remove when live\n\t\tthis.toggleFullScreen();\n\t}\n\n\ttoggleFullScreen = () => {\n\t\tif (\n\t\t\twindow.innerWidth < 800 &&\n\t\t\t!window.screenTop &&\n\t\t\t!window.screenY &&\n\t\t\t!/iPhone|iPad|iPod/i.test(navigator.userAgent)\n\t\t) {\n\t\t\tlet doc = window.document;\n\t\t\tlet docEl = doc.documentElement;\n\n\t\t\tlet requestFullScreen =\n\t\t\t\tdocEl.requestFullscreen ||\n\t\t\t\tdocEl.mozRequestFullScreen ||\n\t\t\t\tdocEl.webkitRequestFullScreen ||\n\t\t\t\tdocEl.msRequestFullscreen;\n\t\t\tlet cancelFullScreen =\n\t\t\t\tdoc.exitFullscreen ||\n\t\t\t\tdoc.mozCancelFullScreen ||\n\t\t\t\tdoc.webkitExitFullscreen ||\n\t\t\t\tdoc.msExitFullscreen;\n\n\t\t\tif (\n\t\t\t\t!doc.fullscreenElement &&\n\t\t\t\t!doc.mozFullScreenElement &&\n\t\t\t\t!doc.webkitFullscreenElement &&\n\t\t\t\t!doc.msFullscreenElement\n\t\t\t) {\n\t\t\t\trequestFullScreen.call(docEl);\n\t\t\t} else {\n\t\t\t\tcancelFullScreen.call(doc);\n\t\t\t}\n\t\t}\n\t};\n\n\ttoggler = () => {\n\t\tthis.setState((prevState) => {\n\t\t\treturn {\n\t\t\t\ttoggle: !prevState.toggle\n\t\t\t};\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { toggle } = this.state;\n\t\treturn (\n\t\t\t<div className=\"button-container\">\n\t\t\t\t{toggle ? (\n\t\t\t\t\t<div onClick={this.toggler}>\n\t\t\t\t\t\t<CirclePicker\n\t\t\t\t\t\t\tonChange={this.props.selectColor}\n\t\t\t\t\t\t\tclassName=\"color-swatch\"\n\t\t\t\t\t\t\tcolor={this.props.currentColor}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) : null}\n\t\t\t\t<div className=\"clear\">\n\t\t\t\t\t<button onClick={this.props.clearBoard}>Clear</button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"fullscreen-mode\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tthis.toggleFullScreen();\n\n\t\t\t\t\t\t\tthis.props.leave();\n\t\t\t\t\t\t\tthis.props.leaveRoom();\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\tLeave Room\n\t\t\t\t\t</button>\n\t\t\t\t\t<button onClick={this.toggler}>\n\t\t\t\t\t\t{this.state.toggle ? \"Hide Colors\" : \"Show Colors\"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\n\nexport default class UserList extends Component {\n\trender() {\n\t\tlet userList = this.props.userList.map((user) => {\n\t\t\treturn (\n\t\t\t\t<span key={user.id} style={{ color: user.color }}>\n\t\t\t\t\t{user.username}\n\t\t\t\t</span>\n\t\t\t);\n\t\t});\n\t\treturn <div className=\"user-list\">{userList}</div>;\n\t}\n}\n","import React, { Component } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport ColorSelector from \"./ColorSelector\";\nimport UserList from \"./UserList\";\n\n// In development you have to point the react front end explicitly to your express server which will be running on a different port than the React Dev Server\n\nconst socket = socketIOClient(\"http://192.168.1.1:4010\"); //development;\n\n// In production, the express server will be the one to serve the react application so we can leave out the connection string argument, which will allow the socket to default to it origin (theoretically your express server)\n\n// const socket = socketIOClient(); //production\n\nexport default class WhiteBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: null,\n      drawing: false,\n      currentColor: \"red\",\n      windowHeight: window.innerHeight,\n      windowWidth: window.innerWidth,\n      cleared: false,\n      username: null,\n      room: null,\n      userList: []\n    };\n\n    this.whiteboard = React.createRef();\n\n    socket.emit(\"join\", {\n      username: this.props.username,\n      room: this.props.room\n    });\n\n    socket.on(\"joined\", joined => {\n      this.setState({\n        id: joined.id,\n        username: joined.username,\n        room: joined.room\n      });\n    });\n\n    socket.on(\"users\", users => {\n      this.setState({\n        userList: users\n      });\n    });\n\n    socket.on(\"cleared\", () => {\n      this.state.whiteboard\n        .getContext(\"2d\")\n        .clearRect(0, 0, window.innerWidth, window.innerHeight);\n    });\n\n    socket.on(\"drawing\", data => {\n      let w = window.innerWidth;\n      let h = window.innerHeight;\n\n      if (!isNaN(data.x0 / w) && !isNaN(data.y0)) {\n        this.drawLine(\n          data.x0 * w,\n          data.y0 * h,\n          data.x1 * w,\n          data.y1 * h,\n          data.color\n        );\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      whiteboard: this.whiteboard.current\n    });\n    this.whiteboard.current.style.height = window.innerHeight;\n    this.whiteboard.current.style.width = window.innerWidth;\n\n    this.whiteboard.current.addEventListener(\n      \"mousedown\",\n      this.onMouseDown,\n      false\n    );\n    this.whiteboard.current.addEventListener(\"mouseup\", this.onMouseUp, false);\n    this.whiteboard.current.addEventListener(\"mouseout\", this.onMouseUp, false);\n    this.whiteboard.current.addEventListener(\n      \"mousemove\",\n      this.throttle(this.onMouseMove, 5),\n      false\n    );\n\n    this.whiteboard.current.addEventListener(\n      \"touchstart\",\n      this.onMouseDown,\n      false\n    );\n\n    this.whiteboard.current.addEventListener(\n      \"touchmove\",\n      this.throttle(this.onTouchMove, 5),\n      false\n    );\n\n    this.whiteboard.current.addEventListener(\"touchend\", this.onMouseUp, false);\n\n    window.addEventListener(\"resize\", this.onResize);\n  }\n\n  drawLine = (x0, y0, x1, y1, color, emit, force) => {\n    let context = this.state.whiteboard.getContext(\"2d\");\n    context.beginPath();\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.strokeStyle = color;\n    context.lineWidth = 2;\n    // if (force) {\n    // \tcontext.lineWidth = 1.75 * (force * (force + 3.75));\n    // }\n    context.stroke();\n    context.closePath();\n\n    if (!emit) {\n      return;\n    }\n    var w = window.innerWidth;\n    var h = window.innerHeight;\n    this.setState(() => {\n      if (!isNaN(x0 / w)) {\n        socket.emit(\"drawing\", {\n          x0: x0 / w,\n          y0: y0 / h,\n          x1: x1 / w,\n          y1: y1 / h,\n          color: color,\n          room: this.state.room,\n          force: force\n        });\n\n        return {\n          cleared: false\n        };\n      }\n    });\n  };\n\n  onMouseDown = e => {\n    this.setState(() => {\n      return {\n        currentX: e.clientX,\n        currentY: e.clientY,\n        drawing: true\n      };\n    });\n  };\n\n  onMouseUp = e => {\n    this.setState(() => {\n      return {\n        drawing: false,\n        currentX: e.clientX,\n        currentY: e.clientY\n      };\n    });\n  };\n\n  onMouseMove = e => {\n    if (!this.state.drawing) {\n      return;\n    }\n\n    this.setState(() => {\n      return {\n        currentX: e.clientX,\n        currentY: e.clientY\n      };\n    }, this.drawLine(this.state.currentX, this.state.currentY, e.clientX, e.clientY, this.state.currentColor, true));\n  };\n\n  onTouchMove = e => {\n    if (!this.state.drawing) {\n      return;\n    }\n    console.log();\n    this.setState(() => {\n      this.drawLine(\n        this.state.currentX,\n        this.state.currentY,\n        e.touches[0].clientX,\n        e.touches[0].clientY,\n        this.state.currentColor,\n        true,\n        e.touches[0].force\n      );\n      return {\n        currentX: e.touches[0].clientX,\n        currentY: e.touches[0].clientY\n      };\n    });\n  };\n\n  onResize = () => {\n    this.setState({\n      windowWidth: window.innerWidth,\n      windowHeight: window.innerHeight\n    });\n  };\n\n  throttle = (callback, delay) => {\n    let previousCall = new Date().getTime();\n    return function() {\n      let time = new Date().getTime();\n\n      if (time - previousCall >= delay) {\n        previousCall = time;\n        callback.apply(null, arguments);\n      }\n    };\n  };\n\n  selectColor = color => {\n    this.setState(() => {\n      socket.emit(\"color-change\", {\n        id: this.state.id,\n        username: this.state.username,\n        room: this.state.room,\n        color: color.hex\n      });\n      return {\n        currentColor: color.hex\n      };\n    });\n  };\n\n  clearBoard = () => {\n    socket.emit(\"clear\", this.state.room);\n  };\n\n  leave = () => {\n    socket.emit(\"leaveroom\", { id: this.state.id, room: this.state.room });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"room-name\">{this.state.room}</h1>\n        <canvas\n          height={`${this.state.windowHeight}px`}\n          width={`${this.state.windowWidth}px`}\n          ref={this.whiteboard}\n          className=\"whiteboard\"\n        />\n        <UserList userList={this.state.userList} />\n\n        <ColorSelector\n          clearBoard={this.clearBoard}\n          currentColor={this.state.currentColor}\n          selectColor={this.selectColor}\n          leaveRoom={this.props.clearRoom}\n          leave={this.leave}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport logo from \"./logo1.png\";\n\nexport default class Choose extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"login\">\n\t\t\t\t<div>\n\t\t\t\t\t<div className=\"login-container\">\n\t\t\t\t\t\t<div className=\"logo-container\">\n\t\t\t\t\t\t\t<h1 className=\"appname just\">Draw</h1>\n\t\t\t\t\t\t\t<h1 className=\"appname drw\">Things</h1>\n\n\t\t\t\t\t\t\t<img className=\"logo\" src={logo} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"input-container\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonKeyPress={(e) =>\n\t\t\t\t\t\t\t\t\t\te.key === \"Enter\"\n\t\t\t\t\t\t\t\t\t\t\t? this.props.setUsername()\n\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tname=\"typing\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"name\"\n\t\t\t\t\t\t\t\t\tvalue={this.props.typing}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tthis.props.changeHandler(\n\t\t\t\t\t\t\t\t\t\t\te.target.name,\n\t\t\t\t\t\t\t\t\t\t\te.target.value\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span className=\"warning-message\">\n\t\t\t\t\t\t\t\t{this.props.typing.length > 25\n\t\t\t\t\t\t\t\t\t? this.props.messageName\n\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<div className=\"input-container\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tname=\"typingRoom\"\n\t\t\t\t\t\t\t\t\tplaceholder=\"room\"\n\t\t\t\t\t\t\t\t\tonKeyPress={(e) =>\n\t\t\t\t\t\t\t\t\t\te.key === \"Enter\"\n\t\t\t\t\t\t\t\t\t\t\t? this.props.setUsername()\n\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvalue={this.props.typingRoom}\n\t\t\t\t\t\t\t\t\tonChange={(e) =>\n\t\t\t\t\t\t\t\t\t\tthis.props.changeHandler(\n\t\t\t\t\t\t\t\t\t\t\te.target.name,\n\t\t\t\t\t\t\t\t\t\t\te.target.value\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span className=\"warning-message\">\n\t\t\t\t\t\t\t\t{this.props.typingRoom.length > 25\n\t\t\t\t\t\t\t\t\t? this.props.messageRoom\n\t\t\t\t\t\t\t\t\t: null}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<div className=\"submit-container\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tonClick={() => this.props.setUsername()}>\n\t\t\t\t\t\t\t\t\tJoin\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"instructions\">\n\t\t\t\t\t\t\t\t<h2>Instructions: </h2>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tType your name and a room name, if the room\n\t\t\t\t\t\t\t\t\texists you will join it, if not it will be\n\t\t\t\t\t\t\t\t\tcreated for others to join. Anyone in the\n\t\t\t\t\t\t\t\t\tsame room can draw together!\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport WhiteBoard from \"./components/WhiteBoard\";\nimport Choose from \"./components/Choose\";\n\nimport \"./App.scss\";\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tusername: \"\",\n\t\t\ttyping: \"\",\n\t\t\troom: \"\",\n\t\t\ttypingRoom: \"\",\n\t\t\tmessageRoom: `The room name must be less than 25 character`,\n\t\t\tmessageName: `The your name must be less than 25 character, try abbreviating`\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tlet deferredPrompt;\n\n\t\twindow.addEventListener(\"beforeinstallprompt\", (e) => {\n\t\t\t// Prevent Chrome 67 and earlier from automatically showing the prompt\n\t\t\te.preventDefault();\n\t\t\t// Stash the event so it can be triggered later.\n\t\t\tdeferredPrompt = e;\n\t\t\t// Update UI notify the user they can add to home screen\n\t\t\tdeferredPrompt.prompt();\n\t\t\t// Wait for the user to respond to the prompt\n\t\t\tdeferredPrompt.userChoice.then((choiceResult) => {\n\t\t\t\tif (choiceResult.outcome === \"accepted\") {\n\t\t\t\t\tconsole.log(\"User accepted the A2HS prompt\");\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"User dismissed the A2HS prompt\");\n\t\t\t\t}\n\t\t\t\tdeferredPrompt = null;\n\t\t\t});\n\t\t});\n\t}\n\n\tchangeHandler = (inputName, value) => {\n\t\tthis.setState({\n\t\t\t[inputName]: value\n\t\t});\n\t};\n\n\tsetUsername = () => {\n\t\tif (\n\t\t\tthis.state.typing.length <= 25 &&\n\t\t\tthis.state.typingRoom.length <= 25\n\t\t) {\n\t\t\tthis.setState({\n\t\t\t\tusername: this.state.typing || this.state.username,\n\t\t\t\troom: this.state.typingRoom.toUpperCase()\n\t\t\t});\n\t\t}\n\t};\n\n\tclearRoom = () => {\n\t\tthis.setState({\n\t\t\tusername: \"\",\n\t\t\troom: \"\",\n\t\t\ttypingRoom: \"\",\n\t\t\ttyping: \"\"\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{this.state.username && this.state.room ? (\n\t\t\t\t\t<WhiteBoard clearRoom={this.clearRoom} {...this.state} />\n\t\t\t\t) : (\n\t\t\t\t\t<Choose\n\t\t\t\t\t\t{...this.state}\n\t\t\t\t\t\tsetUsername={this.setUsername}\n\t\t\t\t\t\tchangeHandler={this.changeHandler}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}